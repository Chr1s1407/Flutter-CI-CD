name: Continuous Practice Pipeline for Flutter

on:
  push:
    branches:
      - main

env:
  APP_NAME: app3
  CACHE_FLUTTER: true
  BUILD_ANDROID: true
  BUILD_IOS: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: $env.CACHE_FLUTTER
      - run: flutter --version

      - name: Clean
        run: flutter clean

      - name: Install Packages / Dependencies
        run: flutter pub get

      - name: Analyze dart code
        run: flutter analyze lib test

      - name: Run tests including coverage
        run: flutter test --no-pub --coverage test

  build-android:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: $env.CACHE_FLUTTER
      - run: flutter --version

      - name: Install Packages / Dependencies
        run: flutter pub get

      - name: Build Android Appbundle
        if: ${{ env.BUILD_ANDROID == 'true'}}
        run: flutter build apk --flavor ${{ env.APP_NAME }} --release --no-pub

      - name: Sign Android Appbundle
        if: ${{ env.BUILD_ANDROID == 'true'}}
        id: android_sign
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: build/app/outputs/flutter-apk/
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Archive Android Production Artifact
        if: ${{ env.BUILD_ANDROID == 'true'}}
        uses: actions/upload-artifact@master
        with:
            name: android
            path: ${{ steps.android_sign.outputs.signedReleaseFile }}

  build-ios:
    needs: [test]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: $env.CACHE_FLUTTER
      - run: flutter --version

      - name: Install Packages / Dependencies
        run: flutter pub get

      - name: Build iOS App
        if: ${{ env.BUILD_IOS == 'true'}}
        run: |
            flutter build ios --no-codesign --flavor ${{ env.APP_NAME }}
            cd build/ios/iphoneos
            mkdir Payload
            cd Payload
            ln -s ../Runner.app
            cd ..
            zip -r app.ipa Payload

      - name: Archive iOS Production Artifact
        if: ${{ env.BUILD_IOS == 'true'}}
        uses: actions/upload-artifact@master
        with:
          name: ios
          path: build/ios/iphoneos/app.ipa
