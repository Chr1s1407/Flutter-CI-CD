name: Build and deploy Flutter apps

# runs on every push on branch main
# TODO: analyze and test should run on other branches too
on:
  push:
    branches:
      - main

env:
  CACHE_FLUTTER: ${{ true }} # specify whether flutter should be cached or not
  BUILD_ANDROID: ${{ true }} # specify whether an android appbundle should be build or should be skipped
  BUILD_IOS:  ${{ true }}
  BUILD_WEB:  ${{ true }}
  BUILD_WINDOWS: ${{ false }}
  BUILD_LINUX: ${{ false }}
  BUILD_MACOS: ${{ false }}
  RELEASE: ${{ false }}

jobs:
  build:
    # build for iOS requires macOS underneath
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: $CACHE_FLUTTER
      - run: flutter --version # print flutter version

      - name: Install Packages / Dependencies
        run: flutter pub get

      - name: Analyze dart code
        run: flutter analyze lib test

      - name: Run tests including coverage
        # since packages has already been installed, --no-pub is used
        # --coverage collects code coverage of tests
        run: flutter test --no-pub --coverage test

      - name: Build Android Appbundle
        if: $BUILD_ANDROID
        run: flutter build appbundle

      - name: Build iOS App
        if: $BUILD_IOS
        run: |
            flutter build ios --no-codesign
            cd build/ios/iphoneos
            mkdir Payload
            cd Payload
            ln -s ../Runner.app
            cd ..
            zip -r app.ipa Payload

      - name: Build web
        if: $BUILD_WEB
        run: |
          flutter build web
          cd build/web
          zip -r web-app.zip .

      - name: Build MacOS
        if: $BUILD_MACOS
        run: |
          flutter config --enable-macos-desktop
          flutter build macos

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: $CACHE_FLUTTER
      - run: flutter --version # print flutter version

      - name: Install Packages / Dependencies
        run: flutter pub get

      - name: Build Windows
        if: $BUILD_WINDOWS
        run: |
          flutter config --enable-windows-desktop
          flutter build windows

  build-linux:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v2
        - uses: subosito/flutter-action@v2
          with:
            channel: 'stable'
            cache: $CACHE_FLUTTER
        - run: flutter --version # print flutter version

        - name: Install Packages / Dependencies
          run: flutter pub get

        - name: Build Linux
          if: $BUILD_LINUX
          run: |
            sudo apt-get update -y
            sudo apt-get install -y ninja-build libgtk-3-dev
            flutter config --enable-windows-desktop
            flutter build linux

  archive:
    - name: Archive Production Artifact (WEB)
      if: $BUILD_WEB
      uses: actions/upload-artifact@master
      with:
        name: web
        path: build/web

  release:
    - name: Release Apps
      if: $RELEASE
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: 'build/app/outputs/**/*.apk,build/ios/iphoneos/app.ipa,build/web/web-app.zip'
